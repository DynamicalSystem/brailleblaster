package org.brailleblaster.wordprocessor;

import org.eclipse.swt.*;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.layout.FormLayout;
import org.eclipse.swt.layout.FormData;
import org.eclipse.swt.layout.FormAttachment;
import org.eclipse.swt.widgets.FileDialog;
import org.brailleblaster.BBIni;
import org.eclipse.swt.widgets.MessageBox;
import org.eclipse.swt.printing.*;
import org.eclipse.swt.widgets.ScrollBar;
import org.eclipse.swt.events.SelectionListener;
import org.eclipse.swt.events.SelectionAdapter;
import org.eclipse.swt.events.SelectionEvent;
import org.eclipse.swt.custom.StyledText;

/**
* This class manages each document in an MDI environment. It controls the 
* braille View and the daisy View.
*/

class DocumentManager {

final Display display;
final Shell documentWindow;
FormLayout layout;
String documentName = "untitled";
BBToolBar toolBar;
BBMenu menu;
DaisyView daisy;
BrailleView braille;
BBStatusBar statusBar;
boolean exitSelected = false;

DocumentManager (Display display) {
this.display = display;
documentWindow = new Shell (display, SWT.SHELL_TRIM);
layout = new FormLayout();
documentWindow.setLayout (layout);
documentWindow.setText ("BrailleBlaster " + documentName);
menu = new BBMenu (this);
toolBar = new BBToolBar (this);
daisy = new DaisyView (documentWindow);
braille = new BrailleView (documentWindow);
statusBar = new BBStatusBar (documentWindow);
documentWindow.setSize (1000, 700);
setListeners();
documentWindow.layout(true, true);
documentWindow.open();
//checkLiblouisutdml();
while (!documentWindow.isDisposed() && !exitSelected) {
if (!display.readAndDispatch())
display.sleep();
}
documentWindow.dispose();
}

	private ScrollBar vDaisyScroll;
	private ScrollBar vBrailleScroll;
	private ScrollBar hDaisyScroll;
	private ScrollBar hBrailleScroll;

private SelectionListener daisyScrollListener = new SelectionAdapter () {
		public void widgetSelected (SelectionEvent e) {
			int x =  hDaisyScroll.getSelection() * (hBrailleScroll.getMaximum() - hBrailleScroll.getThumb()) / Math.max(1, hDaisyScroll.getMaximum() - hDaisyScroll.getThumb());
			int y =  vDaisyScroll.getSelection() * (vBrailleScroll.getMaximum() - vBrailleScroll.getThumb()) / Math.max(1, vDaisyScroll.getMaximum() - vDaisyScroll.getThumb());
		braille.view.setOrigin (x, y);
		}
	};

	private SelectionListener brailleScrollListener = new SelectionAdapter () {
		public void widgetSelected (SelectionEvent e) {
			int x =  hBrailleScroll.getSelection() * (hDaisyScroll.getMaximum() - hDaisyScroll.getThumb()) / Math.max(1, hBrailleScroll.getMaximum() - hBrailleScroll.getThumb());
			int y =  vBrailleScroll.getSelection() * (vDaisyScroll.getMaximum() - vDaisyScroll.getThumb()) / Math.max(1, vBrailleScroll.getMaximum() - vBrailleScroll.getThumb());
			daisy.view.setOrigin (x, y);
		}
	};

private void setListeners () {
vDaisyScroll = daisy.view.getVerticalBar ();	vDaisyScroll.addSelectionListener (daisyScrollListener);
vBrailleScroll = braille.view.getVerticalBar ();
hDaisyScroll = daisy.view.getHorizontalBar ();
hBrailleScroll  = braille.view.getHorizontalBar ();
	hDaisyScroll.addSelectionListener (daisyScrollListener);
	vBrailleScroll.addSelectionListener (brailleScrollListener);
	hBrailleScroll.addSelectionListener (brailleScrollListener);
}

void checkLiblouisutdml () {
if (BBIni.haveLiblouisutdml()) {
return;
}
Shell shell = new Shell (display, SWT.DIALOG_TRIM);
MessageBox mb = new MessageBox (shell, SWT.YES | SWT.NO);
mb.setMessage ("The Braille facility is missing."
+ " Do you wish to continue?");
int result = mb.open();
if (result == SWT.NO) {
exitSelected = true;
}
shell.dispose();
}

void newDocument() {
}

void fileNew() {
}

void fileOpen () {
Shell shell = new Shell (display, SWT.DIALOG_TRIM);
FileDialog dialog = new FileDialog (shell, SWT.OPEN);
dialog.open();
shell.dispose();
}

void fileSave() {
Shell shell = new Shell (display, SWT.DIALOG_TRIM);
FileDialog dialog = new FileDialog (shell, SWT.SAVE);
dialog.open();
shell.dispose();
}

}

